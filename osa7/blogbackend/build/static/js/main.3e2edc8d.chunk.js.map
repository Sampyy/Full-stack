{"version":3,"sources":["components/Notification.js","components/Blog.js","components/LoginForm.js","components/Toggleable.js","components/BlogForm.js","components/LoggedIn.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Notification","message","success","className","Blog","blog","handleAddLike","handleDelete","user","useState","visible","setVisible","showPartial","display","paddingTop","paddingLeft","border","borderWidth","marginBottom","showFull","style","title","author","onClick","url","likes","name","username","LoginForm","setUsername","password","setPassword","handleLogin","onSubmit","type","value","id","onChange","target","Toggleable","forwardRef","props","ref","displayName","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","BlogForm","addBlog","newAuthor","setNewAuthor","newTitle","setNewTitle","newUrl","setNewUrl","event","preventDefault","placeholder","LoggedIn","handleLogout","baseUrl","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","Authorization","post","addLike","likedBlog","put","deleteBlog","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","errorMessage","setErrorMessage","successMessage","setSuccessMessage","setUser","blogFormRef","useRef","loginService","blogService","window","localStorage","setItem","JSON","stringify","setTimeout","handleCreateBlog","addedBlog","concat","current","console","log","newBlogs","i","length","sort","blog1","blog2","confirm","blogToDelete","useEffect","loggedUserJSON","getItem","parse","removeItem","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e2edc8d.chunk.js","sourcesContent":["const Notification = ({ message, success }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (success === true) {\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nconst Blog = ({ blog, handleAddLike, handleDelete, user }) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const showPartial = { display: visible ? 'none' : '',\r\n        paddingTop: 10,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 1,\r\n        marginBottom: 5 }\r\n    const showFull = { display: visible ? '' : 'none',\r\n        paddingTop: 10,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 1,\r\n        marginBottom: 5 }\r\n\r\n\r\n    return(\r\n        <div className='blog'>\r\n            <div style ={showPartial} className=\"partialContent\">\r\n                {blog.title} {blog.author}\r\n                <button onClick={ () => setVisible(!visible)}>show</button>\r\n            </div>\r\n            <div style={showFull} className=\"fullContent\">\r\n                <div>{blog.title} <button onClick={ () => setVisible(!visible)}>Hide</button></div>\r\n                <div>{blog.author} </div>\r\n                <div>{blog.url} </div>\r\n                <div>\r\n                likes {blog.likes}\r\n                    <button onClick={() => handleAddLike(blog)}>Like</button>\r\n                </div>\r\n                <div>{blog.user.name}</div>\r\n                {user.username === blog.user.username && <div><button onClick={() => handleDelete(blog)}>Remove</button></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Blog","import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ username, setUsername, password, setPassword, handleLogin }) => {\r\n    LoginForm.propTypes = {\r\n        username: propTypes.string.isRequired,\r\n        password: propTypes.string.isRequired,\r\n        setUsername: propTypes.func.isRequired,\r\n        setPassword: propTypes.func.isRequired,\r\n        handleLogin: propTypes.func.isRequired\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n                    username\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        name=\"Username\"\r\n                        id=\"username\"\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    password\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        name=\"Password\"\r\n                        id=\"password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" id=\"login-button\">login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { useState, useImperativeHandle, forwardRef } from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Toggleable = forwardRef((props, ref) => {\r\n    Toggleable.displayName = Toggleable\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    Toggleable.propTypes = {\r\n        buttonLabel: propTypes.string.isRequired\r\n    }\r\n\r\n    const toggleVisibility = () => setVisible(!visible)\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Toggleable","import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst BlogForm = ({ addBlog }) => {\r\n    const [newAuthor, setNewAuthor] = useState('')\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newUrl, setNewUrl] = useState('')\r\n\r\n\r\n    const createBlog = (event) => {\r\n        event.preventDefault()\r\n        addBlog({\r\n            author: newAuthor,\r\n            title: newTitle,\r\n            url: newUrl,\r\n            likes: 0,\r\n        })\r\n\r\n        setNewAuthor('')\r\n        setNewTitle('')\r\n        setNewUrl('')\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>add new blog</h2>\r\n            <form onSubmit={createBlog}>\r\n                <div>\r\n                author: <input\r\n                        value={newAuthor}\r\n                        onChange={({ target } ) => setNewAuthor(target.value)}\r\n                        id='authorField'\r\n                        placeholder='Author name'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    title: <input\r\n                        value={newTitle}\r\n                        onChange={({ target }) => setNewTitle(target.value)}\r\n                        id='titleField'\r\n                        placeholder='Title name'\r\n                    />\r\n                </div>\r\n                <div>\r\n                url: <input\r\n                        value={newUrl}\r\n                        onChange={({ target } ) => setNewUrl(target.value)}\r\n                        id='urlField'\r\n                        placeholder='url for blog'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type='submit' id='addBlogButton'>Add blog</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogForm","const LoggedIn = ({ user, handleLogout }) => {\r\n    return (\r\n        <div>\r\n            <p>{user.name} logged in</p>\r\n            <button onClick={() => handleLogout()} >Log out </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoggedIn","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newBlog) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.post(baseUrl, newBlog, config)\r\n    return response.data\r\n}\r\n\r\nconst addLike = async (likedBlog) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.put(`${baseUrl}/${likedBlog.id}`, likedBlog, config)\r\n    return response.data\r\n}\r\n\r\nconst deleteBlog = async (blog) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.delete(`${baseUrl}/${blog.id}`, config)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, create, addLike, deleteBlog, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\n\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Notification from './components/Notification'\r\nimport Blog from './components/Blog'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggleable from './components/Toggleable'\r\nimport BlogForm from './components/BlogForm'\r\nimport LoggedIn from './components/LoggedIn'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\n\r\nconst App = () => {\r\n    const [blogs, setBlogs] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [user, setUser] = useState(null)\r\n\r\n    const blogFormRef = useRef()\r\n\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await loginService.login({ username, password })\r\n            setUser(user)\r\n            blogService.setToken(user.token)\r\n            window.localStorage.setItem(\r\n                'loggedBlogUser', JSON.stringify(user)\r\n            )\r\n            setUsername('')\r\n            setPassword('')\r\n            setSuccessMessage('Logged in as ' + user.username)\r\n            setTimeout(() => {\r\n                setSuccessMessage(null)\r\n            }, 5000)\r\n        } catch (exception) {\r\n            setErrorMessage('Incorrect username or password')\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        window.localStorage.removeItem('loggedBlogUser')\r\n        setUser(null)\r\n        setSuccessMessage('Succesfully logged out')\r\n        setTimeout(() => {\r\n            setSuccessMessage(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const handleCreateBlog = async (blog) => {\r\n        try {\r\n\r\n            const addedBlog = await blogService.create(blog)\r\n\r\n            setBlogs(blogs.concat(addedBlog))\r\n            blogFormRef.current.toggleVisibility()\r\n            setSuccessMessage('Added a new blog: ' + addedBlog.title + ' by ' + addedBlog.author)\r\n            setTimeout(() => {\r\n                setSuccessMessage(null)\r\n            }, 5000)\r\n            console.log(addedBlog)\r\n        } catch(exception) {\r\n            setErrorMessage('Blog couldn´t be added: ' + exception )\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const handleAddLike = async (blog) => {\r\n        try {\r\n            const likedBlog = await blogService.addLike(blog)\r\n            console.log(likedBlog)\r\n            const newBlogs = []\r\n            for (let i = 0; i < blogs.length ; i++) {\r\n                newBlogs[i] = blogs[i]\r\n                if (blog.id === blogs[i].id) {\r\n                    newBlogs[i].likes ++\r\n                }\r\n            }\r\n            newBlogs.sort((blog1, blog2) => blog2.likes - blog1.likes)\r\n\r\n            setBlogs(newBlogs)\r\n\r\n        } catch(exception) {\r\n            setErrorMessage('Like couldn`t be added: ' + exception)\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (blog) => {\r\n        try {\r\n\r\n            if (window.confirm('Do you really want to delete the blog?')) {\r\n                const blogToDelete = await blogService.deleteBlog(blog)\r\n                console.log(blogToDelete)\r\n            }\r\n            blogService.getAll().then((blogs) => {\r\n                blogs.sort((blog1, blog2) => blog2.likes - blog1.likes)\r\n                setBlogs( blogs )\r\n            }\r\n            )\r\n        } catch(exception) {\r\n            setErrorMessage('blog couldn`t be deleted: ' + exception)\r\n            setTimeout(() => {\r\n                setErrorMessage(null)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        blogService.getAll().then((blogs) => {\r\n            blogs.sort((blog1, blog2) => blog2.likes - blog1.likes)\r\n            setBlogs( blogs )\r\n        }\r\n        )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            setUser(user)\r\n            blogService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blogs</h1>\r\n            <Notification message ={successMessage} success={true} />\r\n            <Notification message ={errorMessage} />\r\n            {user === null ?\r\n                <LoginForm username={username} setUsername={setUsername} password={password} setPassword={setPassword} handleLogin={handleLogin}/>\r\n                : <div>\r\n                    <LoggedIn user={user} handleLogout={handleLogout}/>\r\n                    <Toggleable buttonLabel={'Add a new blog'} ref={blogFormRef}>\r\n                        <BlogForm addBlog={handleCreateBlog} />\r\n                    </Toggleable>\r\n                    <h2>blogs</h2>\r\n                    {blogs.map(blog =>\r\n                        <Blog key={blog.id} blog={blog} handleAddLike={handleAddLike} handleDelete={handleDelete} user={user}/>\r\n                    )}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}